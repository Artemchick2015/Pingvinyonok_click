// --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö ---
let count = 0;
let coinsPerClick = 1;
let passiveIncome = false;
const passiveIncomeRate = 1000 / 3600; // 1000 –º–æ–Ω–µ—Ç –Ω–∞ –≥–æ–¥–∏–Ω—É

// DOM –µ–ª–µ–º–µ–Ω—Ç–∏
const counter = document.getElementById("counter");
const rank = document.getElementById("rank");
const profitPerHourElement = document.getElementById("profitPerHour");

const buyUpgradeBtn = document.getElementById("buyUpgrade");
const buyPassiveIncomeBtn = document.getElementById("buyPassiveIncome");
const buySuperUpgradeBtn = document.getElementById("buySuperUpgrade");
const penguin = document.getElementById("penguin");

const saveBtn = document.getElementById("saveBtn");

// --- –§—É–Ω–∫—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ---
function updateDisplay() {
  counter.innerText = Math.floor(count);
  updateRank();
  updateProfitPerHour();
}

function updateRank() {
  if (count < 10) rank.innerText = "Level: Newbie üê£";
  else if (count < 50) rank.innerText = "Level: Pingvinyonok-student üêß";
  else if (count < 100) rank.innerText = "Level: Boss of the snow ‚ùÑÔ∏è";
  else rank.innerText = "Level: Pingvi-Legend üî•";
}

function updateProfitPerHour() {
  if (passiveIncome) {
    profitPerHourElement.innerText = `Profit per hour: 1000 coins`;
  } else {
    profitPerHourElement.innerText = `Profit per hour: 0 coins`;
  }
}

// --- –ê–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≥—Ä–∏ ---
function autoSaveGame() {
  localStorage.setItem("coins", count);
  localStorage.setItem("coinsPerClick", coinsPerClick);
  localStorage.setItem("passiveIncome", passiveIncome);
}

window.addEventListener("beforeunload", autoSaveGame);
document.addEventListener("visibilitychange", () => {
  if (document.visibilityState === "hidden") autoSaveGame();
});

// --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É ---
window.onload = function() {
  const savedCoins = localStorage.getItem("coins");
  const savedCoinsPerClick = localStorage.getItem("coinsPerClick");
  const savedPassiveIncome = localStorage.getItem("passiveIncome");

  if (savedCoins !== null && !isNaN(savedCoins)) {
    count = parseFloat(savedCoins);
  }
  if (savedCoinsPerClick !== null && !isNaN(savedCoinsPerClick)) {
    coinsPerClick = parseInt(savedCoinsPerClick);
  }
  if (savedPassiveIncome === "true") {
    passiveIncome = true;
  }

  // –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –∞–ø–≥—Ä–µ–π–¥—ñ–≤ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–∏ –∫—É–ø–ª–µ–Ω—ñ
  if (coinsPerClick >= 2) buyUpgradeBtn.disabled = true;
  if (coinsPerClick >= 5) buySuperUpgradeBtn.disabled = true;
  if (passiveIncome) buyPassiveIncomeBtn.disabled = true;

  updateDisplay();
};

// --- –ü–æ–¥—ñ—è –∫–ª—ñ–∫—É –ø–æ –ø—ñ–Ω–≥–≤—ñ–Ω—É ---
penguin.addEventListener("click", () => {
  count += coinsPerClick;
  updateDisplay();
});

// --- –ö–Ω–æ–ø–∫–∞ –∞–ø–≥—Ä–µ–π–¥—É –¥–æ 2 –º–æ–Ω–µ—Ç –∑–∞ –∫–ª—ñ–∫ ---
buyUpgradeBtn.addEventListener("click", () => {
  if (count >= 50 && coinsPerClick < 2) {
    count -= 50;
    coinsPerClick = 2;
    buyUpgradeBtn.disabled = true;
    alert("Upgrade bought! Now 2 coins per click.");
    updateDisplay();
  } else if (coinsPerClick >= 2) {
    alert("Upgrade already bought!");
  } else {
    alert("Not enough coins!");
  }
});

// --- –ö–Ω–æ–ø–∫–∞ –∞–ø–≥—Ä–µ–π–¥—É –¥–æ 5 –º–æ–Ω–µ—Ç –∑–∞ –∫–ª—ñ–∫ (–Ω–æ–≤–∏–π –∞–ø–≥—Ä–µ–π–¥) ---
buySuperUpgradeBtn.addEventListener("click", () => {
  if (count >= 250 && coinsPerClick < 5) {
    count -= 250;
    coinsPerClick = 5;
    buySuperUpgradeBtn.disabled = true;
    alert("Super Upgrade bought! Now 5 coins per click.");
    updateDisplay();
  } else if (coinsPerClick >= 5) {
    alert("Super Upgrade already bought!");
  } else {
    alert("Not enough coins!");
  }
});

// --- –ö–Ω–æ–ø–∫–∞ –ø–∞—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥—É ---
buyPassiveIncomeBtn.addEventListener("click", () => {
  if (count >= 1000 && !passiveIncome) {
    count -= 1000;
    passiveIncome = true;
    buyPassiveIncomeBtn.disabled = true;
    alert("Passive income bought!");
    updateDisplay();
  } else if (passiveIncome) {
    alert("Passive income already bought!");
  } else {
    alert("Not enough coins!");
  }
});

// --- –ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥ (–∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É) ---
setInterval(() => {
  if (passiveIncome) {
    count += passiveIncomeRate;
    updateDisplay();
  }
}, 1000);

// --- –ö–Ω–æ–ø–∫–∞ —Ä—É—á–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ---
saveBtn.addEventListener("click", () => {
  autoSaveGame();
  alert("Result saved!");
});
