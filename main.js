// --- –ê–í–¢–û–ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø ---
function autoSaveGame() {
  localStorage.setItem("coins", count);
  localStorage.setItem("coinsPerClick", coinsPerClick);
  localStorage.setItem("passiveIncome", passiveIncome);
}
window.addEventListener("beforeunload", autoSaveGame);
document.addEventListener("visibilitychange", function() {
  if (document.visibilityState === "hidden") autoSaveGame();
});
let coins = 0;
let coinsPerClick = 1;
let passiveIncome = false;

const coinsDisplay = document.getElementById('coins');
const status = document.getElementById('status');
const clickPenguinBtn = document.getElementById('clickPenguin');
const upgradeClickBtn = document.getElementById('upgradeClick');
const upgradePassiveBtn = document.getElementById('upgradePassive');

function updateDisplay() {
  coinsDisplay.textContent = `–ú–æ–Ω–µ—Ç–∏: ${coins}`;
}

clickPenguinBtn.addEventListener('click', () => {
  coins += coinsPerClick;
  updateDisplay();
});

upgradeClickBtn.addEventListener('click', () => {
  if (coins >= 50 && coinsPerClick === 1) {
    coins -= 50;
    coinsPerClick = 2;
    updateDisplay();
    status.textContent = '–ê–ø–≥—Ä–µ–π–¥ –∫—É–ø–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä 2 –º–æ–Ω–µ—Ç–∏ –∑–∞ –∫–ª—ñ–∫.';
    upgradeClickBtn.disabled = true;
  } else if (coinsPerClick > 1) {
    status.textContent = '–ê–ø–≥—Ä–µ–π–¥ –≤–∂–µ –∫—É–ø–ª–µ–Ω–æ!';
  } else {
    status.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∞–ø–≥—Ä–µ–π–¥—É.';
  }
});

upgradePassiveBtn.addEventListener('click', () => {
  if (coins >= 1000 && !passiveIncome) {
    coins -= 1000;
    passiveIncome = true;
    updateDisplay();
    status.textContent = '–ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!';
    upgradePassiveBtn.disabled = true;
  } else if (passiveIncome) {
    status.textContent = '–ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥ –≤–∂–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!';
  } else {
    status.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∞—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥—É.';
  }
});

// –ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥: –¥–æ–¥–∞—î–º–æ 1 –º–æ–Ω–µ—Ç—É –∫–æ–∂–Ω—ñ 3.6 —Å–µ–∫—É–Ω–¥–∏ (1000 –º–æ–Ω–µ—Ç –Ω–∞ –≥–æ–¥–∏–Ω—É)
setInterval(() => {
  if (passiveIncome) {
    coins += 1;
    updateDisplay();
  }
}, 3600);

updateDisplay();
window.onload = function() {
  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–Ω–µ—Ç–∏ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—é –¥–∞—Ç—É –±–æ–Ω—É—Å—É –∑ localStorage
  let pingviCoins = parseInt(localStorage.getItem('pingviCoins')) || 0;
  let lastBonusDate = localStorage.getItem('lastBonusDate'); // —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD

  // –û—Ç—Ä–∏–º—É—î–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—é –¥–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ YYYY-MM-DD
  let today = new Date().toISOString().slice(0, 10);

  // –Ø–∫—â–æ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—è –¥–∞—Ç–∞ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –¥–∞—Ç–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
  if (lastBonusDate !== today) {
    pingviCoins += 500; // –¥–æ–¥–∞—î–º–æ –±–æ–Ω—É—Å
    localStorage.setItem('pingviCoins', pingviCoins);
    localStorage.setItem('lastBonusDate', today);
    alert('Daily bonus: 500 Pingvi coins awarded!');
  }

  // –û–Ω–æ–≤–ª—é—î–º–æ UI
  updateUI();

  // –Ü–Ω—à—ñ –¥—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∏
};

function updateUI() {
  document.getElementById('coinsDisplay').innerText = `Pingvi Coins: ${pingviCoins}`;
}

  let coins = 0;
  let coinsPerClick = 1;
  let passiveIncome = false;

  const coinsDisplay = document.getElementById('coins');
  const status = document.getElementById('status');
  const clickPenguinBtn = document.getElementById('clickPenguin');
  const upgradeClickBtn = document.getElementById('upgradeClick');
  const upgradePassiveBtn = document.getElementById('upgradePassive');

  function updateDisplay() {
    coinsDisplay.textContent = `–ú–æ–Ω–µ—Ç–∏: ${coins}`;
  }

  clickPenguinBtn.addEventListener('click', () => {
    coins += coinsPerClick;
    updateDisplay();
    status.textContent = '';
  });

  upgradeClickBtn.addEventListener('click', () => {
    if (coins >= 50 && coinsPerClick === 1) {
      coins -= 50;
      coinsPerClick = 2;
      updateDisplay();
      status.textContent = '–ê–ø–≥—Ä–µ–π–¥ –∫—É–ø–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä 2 –º–æ–Ω–µ—Ç–∏ –∑–∞ –∫–ª—ñ–∫.';
      upgradeClickBtn.disabled = true;
    } else if (coinsPerClick > 1) {
      status.textContent = '–ê–ø–≥—Ä–µ–π–¥ –≤–∂–µ –∫—É–ø–ª–µ–Ω–æ!';
    } else {
      status.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∞–ø–≥—Ä–µ–π–¥—É.';
    }
  });
const buySuperUpgradeBtn = document.getElementById("buySuperUpgrade");
buySuperUpgradeBtn.addEventListener("click", () => {
  if (count >= 1500 && coinsPerClick < 10) {
    count -= 1500;
    coinsPerClick = 10;
    counter.innerText = count;
    updateRank();
    alert("Super Upgrade bought! Now 10 coins per click.");
  } else if (coinsPerClick >= 10) {
    alert("Super Upgrade already bought!");
  } else {
    alert("Not enough coins!");
  }
});

  upgradePassiveBtn.addEventListener('click', () => {
    if (coins >= 1000 && !passiveIncome) {
      coins -= 1000;
      passiveIncome = true;
      updateDisplay();
      status.textContent = '–ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!';
      upgradePassiveBtn.disabled = true;
    } else if (passiveIncome) {
      status.textContent = '–ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥ –≤–∂–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!';
    } else {
      status.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∞—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥—É.';
    }
  });

function playRPS(playerChoice) {
  const betInput = document.getElementById("rpsBet");
  const resultDisplay = document.getElementById("rpsResult");
  const betAmount = parseInt(betInput.value);

  if (isNaN(betAmount) || betAmount <= 0) {
    resultDisplay.textContent = "‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —Å—Ç–∞–≤–∫—É.";
    return;
  }

  if (coins < betAmount) {
    resultDisplay.textContent = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –¥–ª—è —Å—Ç–∞–≤–∫–∏.";
    return;
  }

  const choices = ['rock', 'paper', 'scissors'];
  const botChoice = choices[Math.floor(Math.random() * 3)];

  let result = "";
  if (playerChoice === botChoice) {
    result = "ü§ù –ù—ñ—á–∏—è! –°—Ç–∞–≤–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è.";
  } else if (
    (playerChoice === 'rock' && botChoice === 'scissors') ||
    (playerChoice === 'scissors' && botChoice === 'paper') ||
    (playerChoice === 'paper' && botChoice === 'rock')
  ) {
    coins += betAmount; // –≤–∏–≥—Ä–∞—à
    result = `‚úÖ –¢–∏ –≤–∏–≥—Ä–∞–≤! –ë–æ—Ç –≤–∏–±—Ä–∞–≤ ${getEmoji(botChoice)}. +${betAmount} –º–æ–Ω–µ—Ç.`;
  } else {
    coins -= betAmount; // –ø—Ä–æ–≥—Ä–∞—à
    result = `‚ùå –¢–∏ –ø—Ä–æ–≥—Ä–∞–≤. –ë–æ—Ç –≤–∏–±—Ä–∞–≤ ${getEmoji(botChoice)}. -${betAmount} –º–æ–Ω–µ—Ç.`;
  }

  updateDisplay();
  resultDisplay.textContent = result;
}

function getEmoji(choice) {
  if (choice === "rock") return "ü™®";
  if (choice === "paper") return "üìÑ";
  if (choice === "scissors") return "‚úÇÔ∏è";
}


  // –ü–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥: –¥–æ–¥–∞—î–º–æ 1 –º–æ–Ω–µ—Ç—É –∫–æ–∂–Ω—ñ 3.6 —Å–µ–∫—É–Ω–¥–∏ (1000 –º–æ–Ω–µ—Ç –Ω–∞ –≥–æ–¥–∏–Ω—É)
  setInterval(() => {
    if (passiveIncome) {
      coins += 1;
      updateDisplay();
    }
  }, 3600);

  updateDisplay();
};
// --- BOOST LOGIC ---
let clickTimes = [];
let boostActive = false;
let boostTimeout = null;
let normalCoinsPerClick = 1; // –±–∞–∑–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è

function activateBoost() {
  if (boostActive) return;
  boostActive = true;
  normalCoinsPerClick = coinsPerClick;
  coinsPerClick = normalCoinsPerClick * 2;
  penguin.classList.add('boosted');
  boostTimeout = setTimeout(() => {
    boostActive = false;
    coinsPerClick = normalCoinsPerClick;
    penguin.classList.remove('boosted');
  }, 7000);
}
function updateCoinsPerClickDisplay() {
  document.getElementById("coinsPerClickDisplay").innerText = `Coins per click: ${coinsPerClick}`;
}
buyUpgradeBtn.addEventListener("click", () => {
  if (count >= 50 && coinsPerClick === 1) {
    count -= 50;
    coinsPerClick = 2;
    counter.innerText = count;
    updateCoinsPerClickDisplay();
    updateRank();
    alert("Upgrade bought! Now 2 coins per click.");
  } else if (coinsPerClick > 1) {
    alert("Upgrade already bought!");
  } else {
    alert("Not enough coins!");
  }
});
function updateCoinsPerClickDisplay() {
  document.getElementById("coinsPerClickDisplay").innerText = `Coins per click: ${coinsPerClick}`;
}

// –ü—Ä–∏ –∞–ø–≥—Ä–µ–π–¥—ñ:
buyUpgradeBtn.addEventListener("click", () => {
  if (count >= 50 && coinsPerClick === 1) {
    count -= 50;
    coinsPerClick = 2;
    counter.innerText = count;
    updateCoinsPerClickDisplay();
    updateRank();
    alert("Upgrade bought! Now 2 coins per click.");
  }
  // ...—ñ–Ω—à—ñ —É–º–æ–≤–∏...
});

// –ü—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∏:
window.onload = function() {
  // ...—Ç–≤—ñ–π –∫–æ–¥...
  counter.innerText = count;
  updateCoinsPerClickDisplay();
  updateRank();
  updateProfitPerHour();
};
let superUpgradeCost = 1500;

document.getElementById("buySuperUpgrade").addEventListener("click", () => {
  if (pingviCoins >= superUpgradeCost) {
    pingviCoins -= superUpgradeCost;
    coinsPerClick += 10;
    updateUI();
  } else {
    alert("Not enough Pingvi coins!");
  }
});
